// Generated by data binding compiler. Do not edit!
package com.greedygame.newsbreeze.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.greedygame.newsbreeze.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class NewsListItemBinding extends ViewDataBinding {
  @NonNull
  public final CardView bookmarkBtn;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView description;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageView image;

  @NonNull
  public final Button readBtn;

  @NonNull
  public final Button saveBtn;

  @NonNull
  public final CardView separatorView;

  @NonNull
  public final TextView title;

  @Bindable
  protected Boolean mIsFirstItem;

  protected NewsListItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView bookmarkBtn, CardView cardView2, TextView date, TextView description,
      Guideline guideline2, ImageView image, Button readBtn, Button saveBtn, CardView separatorView,
      TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.bookmarkBtn = bookmarkBtn;
    this.cardView2 = cardView2;
    this.date = date;
    this.description = description;
    this.guideline2 = guideline2;
    this.image = image;
    this.readBtn = readBtn;
    this.saveBtn = saveBtn;
    this.separatorView = separatorView;
    this.title = title;
  }

  public abstract void setIsFirstItem(@Nullable Boolean isFirstItem);

  @Nullable
  public Boolean getIsFirstItem() {
    return mIsFirstItem;
  }

  @NonNull
  public static NewsListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.news_list_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static NewsListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<NewsListItemBinding>inflateInternal(inflater, R.layout.news_list_item, root, attachToRoot, component);
  }

  @NonNull
  public static NewsListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.news_list_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static NewsListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<NewsListItemBinding>inflateInternal(inflater, R.layout.news_list_item, null, false, component);
  }

  public static NewsListItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static NewsListItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (NewsListItemBinding)bind(component, view, R.layout.news_list_item);
  }
}
